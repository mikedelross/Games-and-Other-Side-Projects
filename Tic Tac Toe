//programmed using java
import java.util.Scanner;
import java.util.Random;
import java.util.List;
import java.util.Arrays;
import java.util.ArrayList;

public class TicTacToe {

    static ArrayList<Integer> playerPositions = new ArrayList<Integer>();
    static ArrayList<Integer> computerPositions = new ArrayList<Integer>();

    public static void main(String[] args) {


        char[] [] gameBoard = {{' ', '|',' ', '|', ' '},
                {'-', '+','-', '+', '-'},
                {' ', '|',' ', '|', ' '},
                {'-', '+','-', '+', '-'},
                {' ', '|',' ', '|', ' '}};

        printGameBoard(gameBoard);

        while(true) {

            Scanner scan = new Scanner(System.in);
            System.out.println("Enter your placement (1-9):");
            int playerPos = scan.nextInt();
            while(playerPositions.contains(playerPos) || computerPositions.contains(playerPositions)) {
                System.out.println("Position taken, enter a correct position.");
                playerPos = scan.nextInt();
            }

            placePiece(gameBoard, playerPos, "player");

            String result = checkVictory();
            if (result.length() > 0) {
                System.out.println(result);
                break;
            }

            Random rand = new Random();
            int cpuPos = rand.nextInt(9) + 1;
            while(playerPositions.contains(cpuPos) || computerPositions.contains(cpuPos)) {
            }

            placePiece(gameBoard, cpuPos, "cpu");

            printGameBoard(gameBoard);

            result = checkVictory();
            if (result.length() > 0) {
                System.out.println(result);
                 break;
            }

           System.out.println(result);
        }
    }

    public static void printGameBoard(char [] [] gameBoard) {

        for(char [] row : gameBoard) {
            for(char c : row) {
                System.out.print(c);
            }
            System.out.println();
        }
    }

    public static void placePiece(char [] [] gameBoard, int pos, String user) {

        char letter = ' ';

        if(user.equals("player")) {
            letter = 'X';
            playerPositions.add(pos);
        } else if (user.equals("cpu")) {
            letter = 'O';
            computerPositions.add(pos);
        }

        switch(pos) {
            case 1:
                gameBoard[0][0] = letter;
                break;
            case 2:
                gameBoard[0][2] = letter;
                break;
            case 3:
                gameBoard[0][4] = letter;
                break;
            case 4:
                gameBoard[2][0] = letter;
                break;
            case 5:
                gameBoard[2][2] = letter;
                break;
            case 6:
                gameBoard[2][4] = letter;
                break;
            case 7:
                gameBoard[4][0] = letter;
                break;
            case 8:
                gameBoard[4][2] = letter;
                break;
            case 9:
                gameBoard[4][4] = letter;
            default:
                break;
        }
    }

    public static String checkVictory() {

        List topRow = Arrays.asList(1, 2, 3);
        List midRow = Arrays.asList(4, 5, 6);
        List botRow = Arrays.asList(7, 8, 9);
        List leftColumn = Arrays.asList(1, 4, 7);
        List midColumn = Arrays.asList(2, 5, 8);
        List rightColumn = Arrays.asList(3, 6, 9);
        List crossOne = Arrays.asList(1, 5, 9);
        List crossTwo = Arrays.asList(7, 5, 3);

        List<List> winning = new ArrayList<List>();
        winning.add(topRow);
        winning.add(midRow);
        winning.add(botRow);
        winning.add(leftColumn);
        winning.add(midColumn);
        winning.add(rightColumn);
        winning.add(crossOne);
        winning.add(crossTwo);

        for(List listOfList : winning) {
            if(playerPositions.containsAll(listOfList)) {
                return "Congratulations, you won!";
            }else if(computerPositions.contains(listOfList)) {
                return "CPU wins! Sorry :(";
            }else if (playerPositions.size() + computerPositions.size() == 9) {
                    return "Tie";
                }
        }

        return "";
    }
}
